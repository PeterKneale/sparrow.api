consumes:
- application/json
definitions:
  Account:
    description: An account (default view)
    example:
      name: t
    properties:
      name:
        description: Account name
        example: t
        maxLength: 255
        minLength: 1
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/vnd.account+json'
    type: object
  CreateUserPayload:
    example:
      first_name: Corrupti perspiciatis labore.
      last_name: Dignissimos illo fugiat.
    properties:
      first_name:
        example: Corrupti perspiciatis labore.
        type: string
      last_name:
        example: Dignissimos illo fugiat.
        type: string
    required:
    - first_name
    - last_name
    title: CreateUserPayload
    type: object
  UpdateAccountPayload:
    example:
      name: Ratione nemo veritatis est.
    properties:
      name:
        example: Ratione nemo veritatis est.
        type: string
    title: UpdateAccountPayload
    type: object
  UpdateUserPayload:
    example:
      first_name: Nemo est minus sit harum occaecati.
      last_name: Non aut dolores inventore aliquam qui.
    properties:
      first_name:
        example: Nemo est minus sit harum occaecati.
        type: string
      last_name:
        example: Non aut dolores inventore aliquam qui.
        type: string
    title: UpdateUserPayload
    type: object
  User:
    description: A user (default view)
    example:
      first_name: bikzd4guzv
      href: /users/1
      id: 8.016644e+18
      last_name: z21
      name: f6opai
    properties:
      first_name:
        description: First name
        example: bikzd4guzv
        maxLength: 255
        minLength: 1
        type: string
      href:
        description: API href of user
        example: /users/1
        type: string
      id:
        description: User id
        example: 8.016644e+18
        format: int64
        type: integer
      last_name:
        description: Last name
        example: z21
        maxLength: 255
        minLength: 1
        type: string
      name:
        description: name
        example: f6opai
        maxLength: 255
        minLength: 1
        type: string
    required:
    - id
    - href
    - first_name
    - last_name
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
  UserCollection:
    description: UserCollection is the media type for an array of User (default view)
    example:
    - first_name: bikzd4guzv
      href: /users/1
      id: 8.016644e+18
      last_name: z21
      name: f6opai
    - first_name: bikzd4guzv
      href: /users/1
      id: 8.016644e+18
      last_name: z21
      name: f6opai
    items:
      $ref: '#/definitions/User'
    title: 'Mediatype identifier: application/vnd.user+json; type=collection'
    type: array
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error'
    type: object
host: localhost
info:
  description: Sparrow API
  title: Sparrow API
  version: ""
paths:
  /account:
    get:
      description: read current account
      operationId: Account#read
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: read Account
      tags:
      - Account
    put:
      description: Update account
      operationId: Account#update
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateAccountPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: update Account
      tags:
      - Account
  /alive:
    get:
      description: Perform health check.
      operationId: health#alive
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: alive health
      tags:
      - health
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.json
  /swagger.yaml:
    get:
      operationId: swagger#/swagger.yaml
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.yaml
  /users:
    get:
      description: List users
      operationId: User#list
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list User
      tags:
      - User
    post:
      description: Create new user
      operationId: User#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserPayload'
      responses:
        "201":
          description: Resource created
          headers:
            Location:
              description: href to created resource
              pattern: /users/[0-9]+
              type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: create User
      tags:
      - User
  /users/{id}:
    delete:
      operationId: User#delete
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: delete User
      tags:
      - User
    get:
      description: read user
      operationId: User#read
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: read User
      tags:
      - User
    put:
      description: Update user
      operationId: User#update
      parameters:
      - description: User id
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateUserPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: update User
      tags:
      - User
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
schemes:
- http
swagger: "2.0"
